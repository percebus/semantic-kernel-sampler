"""
This type stub file was generated by pyright.
"""

from typing import Sequence, TypeVar
from hamcrest.core.base_matcher import BaseMatcher
from hamcrest.core.description import Description
from hamcrest.core.matcher import Matcher

__author__ = ...
__copyright__ = ...
__license__ = ...
T = TypeVar("T")
class IsIn(BaseMatcher[T]):
    def __init__(self, sequence: Sequence[T]) -> None:
        ...
    
    def describe_to(self, description: Description) -> None:
        ...
    


def is_in(sequence: Sequence[T]) -> Matcher[T]:
    """Matches if evaluated object is present in a given sequence.

    :param sequence: The sequence to search.

    This matcher invokes the ``in`` membership operator to determine if the
    evaluated object is a member of the sequence.

    """
    ...

