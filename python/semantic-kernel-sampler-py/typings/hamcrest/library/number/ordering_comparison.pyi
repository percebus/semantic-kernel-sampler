"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable
from hamcrest.core.base_matcher import BaseMatcher
from hamcrest.core.description import Description
from hamcrest.core.matcher import Matcher

__author__ = ...
__copyright__ = ...
__license__ = ...
class OrderingComparison(BaseMatcher[Any]):
    def __init__(self, value: Any, comparison_function: Callable[[Any, Any], bool], comparison_description: str) -> None:
        ...
    
    def describe_to(self, description: Description) -> None:
        ...
    


def greater_than(value: Any) -> Matcher[Any]:
    """Matches if object is greater than a given value.

    :param value: The value to compare against.

    """
    ...

def greater_than_or_equal_to(value: Any) -> Matcher[Any]:
    """Matches if object is greater than or equal to a given value.

    :param value: The value to compare against.

    """
    ...

def less_than(value: Any) -> Matcher[Any]:
    """Matches if object is less than a given value.

    :param value: The value to compare against.

    """
    ...

def less_than_or_equal_to(value: Any) -> Matcher[Any]:
    """Matches if object is less than or equal to a given value.

    :param value: The value to compare against.

    """
    ...

