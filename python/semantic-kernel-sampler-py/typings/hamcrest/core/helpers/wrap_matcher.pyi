"""
This type stub file was generated by pyright.
"""

from typing import Type, TypeVar, Union
from hamcrest.core.base_matcher import Matcher

__author__ = ...
__copyright__ = ...
__license__ = ...
T = TypeVar("T")
def wrap_matcher(x: Union[Matcher[T], T]) -> Matcher[T]:
    """Wraps argument in a matcher, if necessary.

    :returns: the argument as-is if it is already a matcher, otherwise wrapped
        in an :py:func:`~hamcrest.core.core.isequal.equal_to` matcher.

    """
    ...

def is_matchable_type(expected_type: Type) -> bool:
    ...

